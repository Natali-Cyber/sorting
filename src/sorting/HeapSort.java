package sorting;

// Java класс, реализующий сортировку кучей (Heap Sort)
public class HeapSort implements SortingMethod { // Класс HeapSort реализует интерфейс SortingMethod
    // Метод сортировки с использованием алгоритма сортировки кучей
    public void sort(int[] array) {
        int length = array.length; // Получаем длину массива

        // Построение кучи (heap)
        for (int i = length / 2 - 1; i >= 0; i--) // Начинаем с последнего родителя и идем к корню
            heapify(array, length, i); // Превращаем массив в кучу

        // Извлекаем элементы из кучи по одному
        for (int i = length - 1; i > 0; i--) {
            // Перемещаем корень (максимальный элемент) в конечную позицию
            int tmp = array[0]; // Сохраняем корень
            array[0] = array[i]; // Перемещаем последний элемент на позицию корня
            array[i] = tmp; // Помещаем сохраненный корень на конец массива
            // Вызываем heapify для уменьшенной кучи
            heapify(array, i, 0); // Восстанавливаем кучу
        }
    }

    // Метод для превращения массива в кучу
    void heapify(int[] array, int length, int i) {
        int greatest = i; // Изначально предполагаем, что наибольший элемент — это корень
        int l = 2 * i + 1; // Индекс левого дочернего элемента
        int r = 2 * i + 2; // Индекс правого дочернего элемента

        // Если левый дочерний элемент больше корня
        if (l < length && array[l] > array[greatest])
            greatest = l; // Обновляем индекс наибольшего
        // Если правый дочерний элемент больше наибольшего
        if (r < length && array[r] > array[greatest])
            greatest = r; // Обновляем индекс наибольшего

        // Если наибольший элемент не корень
        if (greatest != i) {
            int tmp = array[i]; // Сохраняем корень
            array[i] = array[greatest]; // Меняем местами корень и наибольший элемент
            array[greatest] = tmp; // Обновляем наибольший элемент на его новой позиции
            // Рекурсивно восстанавливаем поддерево
            heapify(array, length, greatest); // Восстанавливаем кучу для измененного поддерева
        }
    }
}